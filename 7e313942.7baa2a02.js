(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{106:function(e,n,r){"use strict";r.d(n,"a",(function(){return o}));var t=r(0),a=r.n(t);function o(e){return a.a.createElement(a.a.Fragment,null,a.a.createElement("strong",null,"Result: "),a.a.createElement("pre",{className:"graphql-result"},JSON.stringify(e.result,null,2)))}},84:function(e,n,r){"use strict";r.r(n),r.d(n,"frontMatter",(function(){return g})),r.d(n,"metadata",(function(){return v})),r.d(n,"rightToc",(function(){return _})),r.d(n,"default",(function(){return O}));var t=r(2),a=r(6),o=(r(0),r(91)),i=r(106),l={data:{movies:[{title:"Spirited Away",year:"2001"},{title:"Shrek",year:"2001"}]}},s=["components"],c={rightToc:[]};function u(e){var n=e.components,r=Object(a.a)(e,s);return Object(o.b)("wrapper",Object(t.a)({},c,r,{components:n,mdxType:"MDXLayout"}),Object(o.b)("pre",null,Object(o.b)("code",Object(t.a)({parentName:"pre"},{className:"language-js"}),'function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);\n      }\n      _next(undefined);\n    });\n  };\n}\nfunction _slicedToArray(arr, i) {\n  return (\n    _arrayWithHoles(arr) ||\n    _iterableToArrayLimit(arr, i) ||\n    _unsupportedIterableToArray(arr, i) ||\n    _nonIterableRest()\n  );\n}\nfunction _nonIterableRest() {\n  throw new TypeError(\n    "Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."\n  );\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === "string") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === "Object" && o.constructor) n = o.constructor.name;\n  if (n === "Map" || n === "Set") return Array.from(o);\n  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))\n    return _arrayLikeToArray(o, minLen);\n}\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n  return arr2;\n}\nfunction _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr)))\n    return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n  try {\n    for (\n      var _i = arr[Symbol.iterator](), _s;\n      !(_n = (_s = _i.next()).done);\n      _n = true\n    ) {\n      _arr.push(_s.value);\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i["return"] != null) _i["return"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n  return _arr;\n}\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\nfunction _typeof(obj) {\n  "@babel/helpers - typeof";\n  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj &&\n        typeof Symbol === "function" &&\n        obj.constructor === Symbol &&\n        obj !== Symbol.prototype\n        ? "symbol"\n        : typeof obj;\n    };\n  }\n  return _typeof(obj);\n}\nimport { createWrapper, WrapperFor } from "graphql-mocks/resolver";\n\nfunction filterResult(result, args) {\n  // only filter on results that are arrays of objects, ie: [User!]!\n  if (\n    !Array.isArray(result) ||\n    (Array.isArray(result) &&\n      result.some(function (item) {\n        return _typeof(item) !== "object";\n      }))\n  ) {\n    return result;\n  }\n\n  var filtered = result.filter(function (resultItem) {\n    // ensure that the value for an argument matches the value\n    // on the object for the matching key\n    return Object.entries(args).every(function (_ref) {\n      var _ref2 = _slicedToArray(_ref, 2),\n        key = _ref2[0],\n        value = _ref2[1];\n      if (key in resultItem) {\n        return resultItem[key] === value;\n      }\n\n      return true;\n    });\n  });\n\n  return filtered;\n}\n\nexport var automaticFilterWrapper = createWrapper(\n  "automatic-field-filtering",\n  WrapperFor.FIELD,\n  /*#__PURE__*/ (function () {\n    var _ref3 = _asyncToGenerator(\n      /*#__PURE__*/ regeneratorRuntime.mark(function _callee2(\n        originalResolver,\n        wrapperOptions\n      ) {\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch ((_context2.prev = _context2.next)) {\n              case 0:\n                return _context2.abrupt(\n                  "return",\n                  /*#__PURE__*/ (function () {\n                    var _ref4 = _asyncToGenerator(\n                      /*#__PURE__*/ regeneratorRuntime.mark(function _callee(\n                        parent,\n                        args,\n                        context,\n                        info\n                      ) {\n                        var result;\n                        return regeneratorRuntime.wrap(function _callee$(\n                          _context\n                        ) {\n                          while (1) {\n                            switch ((_context.prev = _context.next)) {\n                              case 0:\n                                _context.next = 2;\n                                return originalResolver(\n                                  parent,\n                                  args,\n                                  context,\n                                  info\n                                );\n                              case 2:\n                                result = _context.sent;\n                                return _context.abrupt(\n                                  "return",\n                                  filterResult(result, args)\n                                );\n                              case 4:\n                              case "end":\n                                return _context.stop();\n                            }\n                          }\n                        },\n                        _callee);\n                      })\n                    );\n                    return function (_x3, _x4, _x5, _x6) {\n                      return _ref4.apply(this, arguments);\n                    };\n                  })()\n                );\n              case 1:\n              case "end":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      })\n    );\n    return function (_x, _x2) {\n      return _ref3.apply(this, arguments);\n    };\n  })()\n);\n')))}u.isMDXComponent=!0;var p=["components"],f={rightToc:[]};function m(e){var n=e.components,r=Object(a.a)(e,p);return Object(o.b)("wrapper",Object(t.a)({},f,r,{components:n,mdxType:"MDXLayout"}),Object(o.b)("pre",null,Object(o.b)("code",Object(t.a)({parentName:"pre"},{className:"language-js"}),'export var movies = [\n  {\n    title: "Spirited Away",\n    year: "2001",\n  },\n\n  {\n    title: "Shrek",\n    year: "2001",\n  },\n\n  {\n    title: "La La Land",\n    year: "2016",\n  },\n];\n')))}m.isMDXComponent=!0;var y=["components"],b={rightToc:[]};function d(e){var n=e.components,r=Object(a.a)(e,y);return Object(o.b)("wrapper",Object(t.a)({},b,r,{components:n,mdxType:"MDXLayout"}),Object(o.b)("pre",null,Object(o.b)("code",Object(t.a)({parentName:"pre"},{className:"language-js"}),'import { GraphQLHandler } from "graphql-mocks";\nimport { embed } from "graphql-mocks/resolver-map";\nimport { automaticFilterWrapper } from "./automatic-filtering-filter.source";\nimport { resolverMap } from "./resolver-map";\n\nvar handler = new GraphQLHandler({\n  resolverMap: resolverMap,\n  middlewares: [\n    embed({\n      wrappers: [automaticFilterWrapper],\n    }),\n  ],\n\n  dependencies: {\n    graphqlSchema:\n      "\\n      schema {\\n        query: Query\\n      }\\n\\n      type Query {\\n        movies(title: String, year: String): [Movie!]!\\n      }\\n\\n      type Movie {\\n        title: String!\\n        year: String!\\n      }\\n    ",\n  },\n});\n\nvar query = handler.query(\n  "\\n  query FilteredMovies($year: String) {\\n    movies(year: $year) {\\n      title\\n      year\\n    }\\n  }\\n",\n\n  {\n    year: "2001",\n  }\n);\n\nquery.then(function (result) {\n  return console.log(result);\n});\nquery.then(function (result) {\n  return console.log(result);\n});\n')))}d.isMDXComponent=!0;var h=["components"],g={title:"Automatic Filtering with Wrappers"},v={unversionedId:"guides/automatic-filtering",id:"guides/automatic-filtering",isDocsHomePage:!1,title:"Automatic Filtering with Wrappers",description:"A common pattern is to filter information on Field Resolvers based on arguments from a query. In the case this pattern can be applied to multiple Field Resolvers it's useful to standardize this filtering with Resolver Wrappers. This helps separate filtering from the data resolution and allows for re-use. The nature of the filtering depends on the conventions of your GraphQL API.",source:"@site/docs/guides/automatic-filtering.mdx",slug:"/guides/automatic-filtering",permalink:"/docs/guides/automatic-filtering",version:"current",sidebar:"docs",previous:{title:"Create Custom Highlighters",permalink:"/docs/highlight/creating-highlighters"},next:{title:"Relay Pagination",permalink:"/docs/guides/relay-pagination"}},_=[{value:"Example",id:"example",children:[]}],j={rightToc:_};function O(e){var n=e.components,r=Object(a.a)(e,h);return Object(o.b)("wrapper",Object(t.a)({},j,r,{components:n,mdxType:"MDXLayout"}),Object(o.b)("p",null,"A common pattern is to filter information on Field Resolvers based on arguments from a query. In the case this pattern can be applied to multiple Field Resolvers it's useful to standardize this filtering with ",Object(o.b)("a",Object(t.a)({parentName:"p"},{href:"/docs/resolver/introducing-wrappers"}),"Resolver Wrappers"),". This helps separate filtering from the data resolution and allows for re-use. The nature of the filtering depends on the conventions of your GraphQL API."),Object(o.b)("h2",{id:"example"},"Example"),Object(o.b)("p",null,"This Resolver Wrapper is an example of automatically filtering a list based on the arguments passed in. If a given key is provided it will filter any list down based on the value of the argument."),Object(o.b)(u,{mdxType:"AutomaticFilterSource"}),Object(o.b)("p",null,"For this example the ",Object(o.b)("inlineCode",{parentName:"p"},"Query.movies")," resolver has the following data:"),Object(o.b)(m,{mdxType:"AutomaticFilterData"}),Object(o.b)("p",null,"Then setting up the handler to apply the ",Object(o.b)("inlineCode",{parentName:"p"},"automaticFilter")," Wrapper against the ",Object(o.b)("inlineCode",{parentName:"p"},"Query.movies"),"\nfield resolver. The ",Object(o.b)("inlineCode",{parentName:"p"},"highlight")," argument can be customized to specify a specific selection of fields that should receive the automatic filter wrapper. Also, because there can be multiple Resolver Wrappers passed into the ",Object(o.b)("inlineCode",{parentName:"p"},"wrappers")," array, you could crete and combine multiple automatic filtering Field Wrappers to flexibly compose filtering across your fields."),Object(o.b)("p",null,"The final query in the example, ",Object(o.b)("inlineCode",{parentName:"p"},"FilteredMovies"),", will automatically filter based on the query args ",Object(o.b)("inlineCode",{parentName:"p"},'{ "year": "2001" }')," since ",Object(o.b)("inlineCode",{parentName:"p"},"year")," is an argument that also exists on the ",Object(o.b)("inlineCode",{parentName:"p"},"Movie")," type being filtered."),Object(o.b)(d,{mdxType:"AutomaticFilterExample"}),Object(o.b)(i.a,{result:l,mdxType:"GraphQLResult"}),Object(o.b)("p",null,'In the result the movie "La La Land" was filtered out since it was released in 2016 and the query specified movies with the year ',Object(o.b)("inlineCode",{parentName:"p"},"'2001'"),"."))}O.isMDXComponent=!0},91:function(e,n,r){"use strict";r.d(n,"a",(function(){return p})),r.d(n,"b",(function(){return y}));var t=r(0),a=r.n(t);function o(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function i(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function l(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?i(Object(r),!0).forEach((function(n){o(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function s(e,n){if(null==e)return{};var r,t,a=function(e,n){if(null==e)return{};var r,t,a={},o=Object.keys(e);for(t=0;t<o.length;t++)r=o[t],n.indexOf(r)>=0||(a[r]=e[r]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)r=o[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var c=a.a.createContext({}),u=function(e){var n=a.a.useContext(c),r=n;return e&&(r="function"==typeof e?e(n):l(l({},n),e)),r},p=function(e){var n=u(e.components);return a.a.createElement(c.Provider,{value:n},e.children)},f={inlineCode:"code",wrapper:function(e){var n=e.children;return a.a.createElement(a.a.Fragment,{},n)}},m=a.a.forwardRef((function(e,n){var r=e.components,t=e.mdxType,o=e.originalType,i=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),p=u(r),m=t,y=p["".concat(i,".").concat(m)]||p[m]||f[m]||o;return r?a.a.createElement(y,l(l({ref:n},c),{},{components:r})):a.a.createElement(y,l({ref:n},c))}));function y(e,n){var r=arguments,t=n&&n.mdxType;if("string"==typeof e||t){var o=r.length,i=new Array(o);i[0]=m;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l.mdxType="string"==typeof e?e:t,i[1]=l;for(var c=2;c<o;c++)i[c]=r[c];return a.a.createElement.apply(null,i)}return a.a.createElement.apply(null,r)}m.displayName="MDXCreateElement"}}]);