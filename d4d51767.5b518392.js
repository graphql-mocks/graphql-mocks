(window.webpackJsonp=window.webpackJsonp||[]).push([[45],{135:function(e,n,r){"use strict";r.r(n),r.d(n,"MDXContext",(function(){return l})),r.d(n,"MDXProvider",(function(){return u})),r.d(n,"mdx",(function(){return h})),r.d(n,"useMDXComponents",(function(){return m})),r.d(n,"withMDXComponents",(function(){return d}));var t=r(0),a=r.n(t);function o(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function c(){return(c=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var r=arguments[n];for(var t in r)Object.prototype.hasOwnProperty.call(r,t)&&(e[t]=r[t])}return e}).apply(this,arguments)}function s(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function p(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?s(Object(r),!0).forEach((function(n){o(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):s(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function i(e,n){if(null==e)return{};var r,t,a=function(e,n){if(null==e)return{};var r,t,a={},o=Object.keys(e);for(t=0;t<o.length;t++)r=o[t],n.indexOf(r)>=0||(a[r]=e[r]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)r=o[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var l=a.a.createContext({}),d=function(e){return function(n){var r=m(n.components);return a.a.createElement(e,c({},n,{components:r}))}},m=function(e){var n=a.a.useContext(l),r=n;return e&&(r="function"==typeof e?e(n):p(p({},n),e)),r},u=function(e){var n=m(e.components);return a.a.createElement(l.Provider,{value:n},e.children)},y={inlineCode:"code",wrapper:function(e){var n=e.children;return a.a.createElement(a.a.Fragment,{},n)}},f=a.a.forwardRef((function(e,n){var r=e.components,t=e.mdxType,o=e.originalType,c=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),l=m(r),d=t,u=l["".concat(c,".").concat(d)]||l[d]||y[d]||o;return r?a.a.createElement(u,p(p({ref:n},s),{},{components:r})):a.a.createElement(u,p({ref:n},s))}));function h(e,n){var r=arguments,t=n&&n.mdxType;if("string"==typeof e||t){var o=r.length,c=new Array(o);c[0]=f;var s={};for(var p in n)hasOwnProperty.call(n,p)&&(s[p]=n[p]);s.originalType=e,s.mdxType="string"==typeof e?e:t,c[1]=s;for(var i=2;i<o;i++)c[i]=r[i];return a.a.createElement.apply(null,c)}return a.a.createElement.apply(null,r)}f.displayName="MDXCreateElement"},71:function(e,n,r){"use strict";r.r(n),r.d(n,"frontMatter",(function(){return c})),r.d(n,"metadata",(function(){return s})),r.d(n,"rightToc",(function(){return p})),r.d(n,"default",(function(){return l}));var t=r(2),a=r(7),o=(r(0),r(135)),c={id:"cypress",title:"Cypress"},s={unversionedId:"network/cypress",id:"network/cypress",isDocsHomePage:!1,title:"Cypress",description:"Cypress is a free and open-source JavaScript testing framework for end-to-end, integration, and",source:"@site/docs/network/cypress.md",slug:"/network/cypress",permalink:"/docs/network/cypress",version:"current"},p=[{value:"Installation",id:"installation",children:[]},{value:"Usage",id:"usage",children:[]},{value:"Resolver Context",id:"resolver-context",children:[]}],i={rightToc:p};function l(e){var n=e.components,r=Object(a.default)(e,["components"]);return Object(o.mdx)("wrapper",Object(t.default)({},i,r,{components:n,mdxType:"MDXLayout"}),Object(o.mdx)("p",null,Object(o.mdx)("a",Object(t.default)({parentName:"p"},{href:"https://cypress.io"}),"Cypress")," is a free and open-source JavaScript testing framework for end-to-end, integration, and\ncomponent testing in the browser. It also provides an easy way for mocking and stubbing network requests and responses."),Object(o.mdx)("p",null,"You can easily integrate ",Object(o.mdx)("inlineCode",{parentName:"p"},"graphql-mocks")," with cypress using ",Object(o.mdx)("inlineCode",{parentName:"p"},"@graphql-mocks/network-cypress"),"."),Object(o.mdx)("h2",{id:"installation"},"Installation"),Object(o.mdx)("p",null,"Install the ",Object(o.mdx)("inlineCode",{parentName:"p"},"cypress")," and ",Object(o.mdx)("inlineCode",{parentName:"p"},"@graphql-mocks/network-cypress")," npm packages."),Object(o.mdx)("pre",null,Object(o.mdx)("code",Object(t.default)({parentName:"pre"},{className:"language-bash"}),"# npm\nnpm install --save-dev cypress @graphql-mocks/network-cypress\n\n# yarn\nyarn add --dev cypress @graphql-mocks/network-cypress\n\n# pnpm\npnpm add --save-dev cypress @graphql-mocks/network-cypress\n")),Object(o.mdx)("h2",{id:"usage"},"Usage"),Object(o.mdx)("pre",null,Object(o.mdx)("code",Object(t.default)({parentName:"pre"},{className:"language-typescript"}),"import { GraphQLHandler } from 'graphql-mocks';\nimport { cypressHandler } from '@graphql-mocks/network-cypress';\nimport graphqlSchema from './graphql-schema';\n\nconst graphqlHandler = new GraphQLHandler({\n  dependencies: {\n    graphqlSchema,\n  },\n});\n\ncy.intercept('POST', '/graphql', cypressHandler(graphqlHandler));\n")),Object(o.mdx)("p",null,"You can also create a custom command for mocking GraphQL requests APIs:"),Object(o.mdx)("pre",null,Object(o.mdx)("code",Object(t.default)({parentName:"pre"},{className:"language-typescript"}),"// in cypress/support/commands.ts\n\n// If you're useing typescript\ndeclare global {\n  namespace Cypress {\n    interface Chainable {\n      /**\n       * Custom command to mock GraphQL API.\n       */\n      mockGraphQLAPI(): Chainable<null>;\n    }\n  }\n}\n\nCypress.Commands.add('mockGraphQLAPI', () => {\n  // make sure to return the cy.intercept() command so that you can chain\n  // other commands if needed\n  return cy.intercept('POST', '/graphql', cypressHandler(graphqlHandler));\n});\n")),Object(o.mdx)("h2",{id:"resolver-context"},"Resolver Context"),Object(o.mdx)("p",null,"When using the ",Object(o.mdx)("inlineCode",{parentName:"p"},"@graphql-mocks/network-cypress")," network handler each resolver context has a ",Object(o.mdx)("inlineCode",{parentName:"p"},"cypress")," property which\ncontains the ",Object(o.mdx)("inlineCode",{parentName:"p"},"request")," from the cypress route handler."),Object(o.mdx)("pre",null,Object(o.mdx)("code",Object(t.default)({parentName:"pre"},{className:"language-js"}),"function resolver(parent, args, context, info) {\n  const { cypress } = context;\n  // request, from the cypress route handler\n  const { request } = cypress;\n}\n")))}l.isMDXComponent=!0}}]);