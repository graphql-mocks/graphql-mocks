(window.webpackJsonp=window.webpackJsonp||[]).push([[32],{133:function(e,t,n){"use strict";n.r(t),n.d(t,"MDXContext",(function(){return d})),n.d(t,"MDXProvider",(function(){return m})),n.d(t,"mdx",(function(){return b})),n.d(t,"useMDXComponents",(function(){return u})),n.d(t,"withMDXComponents",(function(){return p}));var r=n(0),o=n.n(r);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(){return(i=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var d=o.a.createContext({}),p=function(e){return function(t){var n=u(t.components);return o.a.createElement(e,i({},t,{components:n}))}},u=function(e){var t=o.a.useContext(d),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},m=function(e){var t=u(e.components);return o.a.createElement(d.Provider,{value:t},e.children)},h={inlineCode:"code",wrapper:function(e){var t=e.children;return o.a.createElement(o.a.Fragment,{},t)}},f=o.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,i=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),d=u(n),p=r,m=d["".concat(i,".").concat(p)]||d[p]||h[p]||a;return n?o.a.createElement(m,c(c({ref:t},s),{},{components:n})):o.a.createElement(m,c({ref:t},s))}));function b(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,i=new Array(a);i[0]=f;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:r,i[1]=s;for(var l=2;l<a;l++)i[l]=n[l];return o.a.createElement.apply(null,i)}return o.a.createElement.apply(null,n)}f.displayName="MDXCreateElement"},60:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return s})),n.d(t,"rightToc",(function(){return c})),n.d(t,"default",(function(){return d}));var r=n(2),o=n(7),a=(n(0),n(133)),i={id:"introduction",title:"Introduction"},s={unversionedId:"getting-started/introduction",id:"getting-started/introduction",isDocsHomePage:!1,title:"Introduction",description:"GraphQL has proven itself to be a powerful tool in building APIs. A single GraphQL endpoint supports an extremely",source:"@site/docs/getting-started/introduction.md",slug:"/getting-started/introduction",permalink:"/docs/getting-started/introduction",version:"current",sidebar:"docs",next:{title:"Installation",permalink:"/docs/getting-started/installation"}},c=[{value:"\ud83d\udd0b Batteries Included",id:"-batteries-included",children:[]},{value:"\ud83d\udee0 Tools Included, too",id:"-tools-included-too",children:[]},{value:"\u270c\ud83c\udffd\ud83d\udc9c Share Feedback and Questions",id:"-share-feedback-and-questions",children:[]}],l={rightToc:c};function d(e){var t=e.components,n=Object(o.default)(e,["components"]);return Object(a.mdx)("wrapper",Object(r.default)({},l,n,{components:t,mdxType:"MDXLayout"}),Object(a.mdx)("p",null,"GraphQL has proven itself to be a powerful tool in building APIs. A single GraphQL endpoint supports an extremely\nflexible query language. This has created a challenge in mocking and creating mock APIs. Unlike other libraries,\n",Object(a.mdx)("inlineCode",{parentName:"p"},"graphql-mocks")," does not use a single method of configuration or convention to setup mock GraphQL APIs. Instead it\nprovides a set of composable tools and utilities that can be used together to flexibly create a mock GraphQL API."),Object(a.mdx)("h2",{id:"-batteries-included"},"\ud83d\udd0b Batteries Included"),Object(a.mdx)("p",null,"Testing, mocking or prototyping, use ",Object(a.mdx)("inlineCode",{parentName:"p"},"graphql-mocks")," with its GraphQL utilities, ",Object(a.mdx)("em",{parentName:"p"},"Resolver Map Middlewares")," and\n",Object(a.mdx)("em",{parentName:"p"},"Resolver Wrappers")," to get started. Use the GraphQL Paper for out-of-the-box stateful queries using\nan in-memory store. The ",Object(a.mdx)("inlineCode",{parentName:"p"},"spyWrapper")," can be used to wrap Sinon spies around resolvers easily in tests. The\n",Object(a.mdx)("inlineCode",{parentName:"p"},"logWrapper")," quickly gives insights into logging Resolver activity. The application of these, and more, can be\nconditionally applied to your GraphQL schema using a query-like technique called ",Object(a.mdx)("em",{parentName:"p"},"Highlight"),". The layering of all of\nthese creates a reusable, declarative system for creating mock GraphQL APIs."),Object(a.mdx)("h2",{id:"-tools-included-too"},"\ud83d\udee0 Tools Included, too"),Object(a.mdx)("p",null,"Managing the GraphQL API surface area of a Resolvers under different mock scenarios can be tricky. That's why this\nlibrary provides common GraphQL utilities, typescript types, and the APIs to easily create Resolver Map Middlewares and\nResolver Wrappers to help organize and speed up development. Together, these allow for the creation of reusable\nabstractions around common scenarios and contexts to organize and mock any GraphQL API. The out-of-the-box Resolver\nWrappers and Resolver Map Middlewares are built on the same underlying APIs. General-purpose abstractions can be shared\nwith the community to help others bootstrap and prototype APIs more quickly."),Object(a.mdx)("h2",{id:"-share-feedback-and-questions"},"\u270c\ud83c\udffd\ud83d\udc9c Share Feedback and Questions"),Object(a.mdx)("p",null,"There's still lots of possibilities that are under development and being explored. I would love to hear any ideas,\ncomments or feedback."),Object(a.mdx)("ul",null,Object(a.mdx)("li",{parentName:"ul"},Object(a.mdx)("a",Object(r.default)({parentName:"li"},{href:"https://discord.gg/eJxddt2CJS"}),"Chat on discord")),Object(a.mdx)("li",{parentName:"ul"},Object(a.mdx)("a",Object(r.default)({parentName:"li"},{href:"https://github.com/graphql-mocks/graphql-mocks/pulls"}),"Create a pull request")),Object(a.mdx)("li",{parentName:"ul"},Object(a.mdx)("a",Object(r.default)({parentName:"li"},{href:"https://github.com/graphql-mocks/graphql-mocks/issues/new"}),"Open an issue")),Object(a.mdx)("li",{parentName:"ul"},Object(a.mdx)("a",Object(r.default)({parentName:"li"},{href:"https://www.twitter.com/chadian"}),"Ping me on twitter"))))}d.isMDXComponent=!0}}]);