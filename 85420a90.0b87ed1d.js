(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{121:function(e,r,t){"use strict";t.r(r),t.d(r,"MDXContext",(function(){return d})),t.d(r,"MDXProvider",(function(){return u})),t.d(r,"mdx",(function(){return h})),t.d(r,"useMDXComponents",(function(){return p})),t.d(r,"withMDXComponents",(function(){return m}));var a=t(0),n=t.n(a);function i(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function o(){return(o=Object.assign||function(e){for(var r=1;r<arguments.length;r++){var t=arguments[r];for(var a in t)Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a])}return e}).apply(this,arguments)}function l(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);r&&(a=a.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,a)}return t}function s(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?l(Object(t),!0).forEach((function(r){i(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function c(e,r){if(null==e)return{};var t,a,n=function(e,r){if(null==e)return{};var t,a,n={},i=Object.keys(e);for(a=0;a<i.length;a++)t=i[a],r.indexOf(t)>=0||(n[t]=e[t]);return n}(e,r);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)t=i[a],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(n[t]=e[t])}return n}var d=n.a.createContext({}),m=function(e){return function(r){var t=p(r.components);return n.a.createElement(e,o({},r,{components:t}))}},p=function(e){var r=n.a.useContext(d),t=r;return e&&(t="function"==typeof e?e(r):s(s({},r),e)),t},u=function(e){var r=p(e.components);return n.a.createElement(d.Provider,{value:r},e.children)},f={inlineCode:"code",wrapper:function(e){var r=e.children;return n.a.createElement(n.a.Fragment,{},r)}},b=n.a.forwardRef((function(e,r){var t=e.components,a=e.mdxType,i=e.originalType,o=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),d=p(t),m=a,u=d["".concat(o,".").concat(m)]||d[m]||f[m]||i;return t?n.a.createElement(u,s(s({ref:r},l),{},{components:t})):n.a.createElement(u,s({ref:r},l))}));function h(e,r){var t=arguments,a=r&&r.mdxType;if("string"==typeof e||a){var i=t.length,o=new Array(i);o[0]=b;var l={};for(var s in r)hasOwnProperty.call(r,s)&&(l[s]=r[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,o[1]=l;for(var c=2;c<i;c++)o[c]=t[c];return n.a.createElement.apply(null,o)}return n.a.createElement.apply(null,t)}b.displayName="MDXCreateElement"},49:function(e,r,t){"use strict";t.r(r),t.d(r,"frontMatter",(function(){return o})),t.d(r,"metadata",(function(){return l})),t.d(r,"rightToc",(function(){return s})),t.d(r,"default",(function(){return d}));var a=t(2),n=t(7),i=(t(0),t(121)),o={id:"available-middlewares",title:"Available Middlewares"},l={unversionedId:"resolver-map/available-middlewares",id:"resolver-map/available-middlewares",isDocsHomePage:!1,title:"Available Middlewares",description:"There are already exists useful Resolver Map Middlewares, or functions that create them, to help get started for the GraphQL various mocking scenarios.",source:"@site/docs/resolver-map/available-middlewares.md",slug:"/resolver-map/available-middlewares",permalink:"/docs/resolver-map/available-middlewares",version:"current",sidebar:"docs",previous:{title:"Managing Resolvers with Middlewares",permalink:"/docs/resolver-map/managing-resolvers"},next:{title:"Creating Custom Middlewares",permalink:"/docs/resolver-map/creating-middlewares"}},s=[{value:"<code>embed</code>",id:"embed",children:[]},{value:"<code>layer</code>",id:"layer",children:[]},{value:"Mirage JS",id:"mirage-js",children:[]}],c={rightToc:s};function d(e){var r=e.components,t=Object(n.default)(e,["components"]);return Object(i.mdx)("wrapper",Object(a.default)({},c,t,{components:r,mdxType:"MDXLayout"}),Object(i.mdx)("p",null,"There are already exists useful Resolver Map Middlewares, or functions that create them, to help get started for the GraphQL various mocking scenarios."),Object(i.mdx)("p",null,"Have a useful Resolver Map Middleware to share with the community? Feel free to open a PR to add it here. Learn how to ",Object(i.mdx)("a",Object(a.default)({parentName:"p"},{href:"/docs/resolver-map/creating-middlewares"}),"create your own custom ones"),", too."),Object(i.mdx)("h2",{id:"embed"},Object(i.mdx)("inlineCode",{parentName:"h2"},"embed")),Object(i.mdx)("ul",null,Object(i.mdx)("li",{parentName:"ul"},"Package: ",Object(i.mdx)("inlineCode",{parentName:"li"},"graphql-mocks")),Object(i.mdx)("li",{parentName:"ul"},Object(i.mdx)("a",Object(a.default)({parentName:"li"},{href:"/docs/resolver-map/managing-resolvers#using-embed"}),"Documentation"))),Object(i.mdx)("p",null,"Manage the Resolver Map by using ",Object(i.mdx)("inlineCode",{parentName:"p"},"embed")," to create Resolver Map Middlewares that can lazily add Resolvers and/or Resolver Wrappers."),Object(i.mdx)("h2",{id:"layer"},Object(i.mdx)("inlineCode",{parentName:"h2"},"layer")),Object(i.mdx)("ul",null,Object(i.mdx)("li",{parentName:"ul"},"Package: ",Object(i.mdx)("inlineCode",{parentName:"li"},"graphql-mocks")),Object(i.mdx)("li",{parentName:"ul"},Object(i.mdx)("a",Object(a.default)({parentName:"li"},{href:"/docs/resolver-map/managing-resolvers#using-layer"}),"Documentation"))),Object(i.mdx)("p",null,"Lazily add layering of Resolver Map Partials with ",Object(i.mdx)("inlineCode",{parentName:"p"},"layer")," and the Resolver Map Middleware it creates. It also supports using Resolver Wrappers in its application of partials."),Object(i.mdx)("h2",{id:"mirage-js"},"Mirage JS"),Object(i.mdx)("ul",null,Object(i.mdx)("li",{parentName:"ul"},"Package: ",Object(i.mdx)("inlineCode",{parentName:"li"},"@graphql-mocks/mirage")),Object(i.mdx)("li",{parentName:"ul"},Object(i.mdx)("a",Object(a.default)({parentName:"li"},{href:"/docs/guides/mirage-js"}),"Documenation"))),Object(i.mdx)("p",null,Object(i.mdx)("em",{parentName:"p"},"Note:")," If starting new it's easier to use GraphQL Paper which works natively with GraphQL, including connections/relationships. GraphQL Paper solves the same use cases as Mirage but in a GraphQL-first way using the GraphQL Schema with more extensibility and features like events, custom validations, hooks. If migrating from an existing a Mirage setup then using the Mirage JS middleware is likely a good fit."),Object(i.mdx)("p",null,Object(i.mdx)("a",Object(a.default)({parentName:"p"},{href:"https://miragejs.com/"}),"Mirage JS")," is a tool for mocking out REST APIs and includes a stateful ORM and DB layer. The ",Object(i.mdx)("inlineCode",{parentName:"p"},"@graphql-mocks/mirage")," provides a middleware that leverages the ORM and DB from Mirage JS to provide stateful GraphQL queries so that data can be persisted, mutated and reflect real-world scenarios. See the ",Object(i.mdx)("a",Object(a.default)({parentName:"p"},{href:"/docs/guides/mirage-js"}),"documentation")," for all details and plenty of examples."))}d.isMDXComponent=!0}}]);