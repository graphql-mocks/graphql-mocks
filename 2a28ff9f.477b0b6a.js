(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{62:function(e,t,r){"use strict";r.r(t),r.d(t,"frontMatter",(function(){return a})),r.d(t,"metadata",(function(){return h})),r.d(t,"rightToc",(function(){return l})),r.d(t,"default",(function(){return c}));var n=r(2),i=(r(0),r(91));const a={title:"Create Custom Highlighters"},h={unversionedId:"highlight/creating-highlighters",id:"highlight/creating-highlighters",isDocsHomePage:!1,title:"Create Custom Highlighters",description:"Highlighters return highlighted References, that is an array of either Type References or Field References, for a given schema. There are already a number of useful highlighters provided by graphql-mocks out-of-the-box.",source:"@site/docs/highlight/creating-highlighters.md",slug:"/highlight/creating-highlighters",permalink:"/docs/highlight/creating-highlighters",version:"current",sidebar:"docs",previous:{title:"Available Highlighters",permalink:"/docs/highlight/available-highlighters"},next:{title:"Automatic Filtering with Wrappers",permalink:"/docs/guides/automatic-filtering"}},l=[{value:"Stateless Highlighters",id:"stateless-highlighters",children:[]},{value:"Stateful Highlighters",id:"stateful-highlighters",children:[]},{value:"Highlight All",id:"highlight-all",children:[]}],o={rightToc:l};function c({components:e,...t}){return Object(i.b)("wrapper",Object(n.a)({},o,t,{components:e,mdxType:"MDXLayout"}),Object(i.b)("p",null,"Highlighters return highlighted ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/highlight/introducing-highlight#references"}),"References"),", that is an array of either ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"pathname:///api/graphql-mocks/modules/highlight.types.html#TypeReference"}),"Type References")," or ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"pathname:///api/graphql-mocks/modules/highlight.types.html#FieldReference"}),"Field References"),", for a given schema. There are already a number of useful highlighters provided by graphql-mocks out-of-the-box."),Object(i.b)("p",null,"A highlighter must conform to the ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"pathname:///api/graphql-mocks/interfaces/highlight.types.Highlighter.html"}),Object(i.b)("inlineCode",{parentName:"a"},"Highlighter")," interface"),". This interface is simply a ",Object(i.b)("inlineCode",{parentName:"p"},"mark")," function on an object:"),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{}),"{\n  mark(schema: GraphQLSchema): Reference[]\n}\n")),Object(i.b)("h2",{id:"stateless-highlighters"},"Stateless Highlighters"),Object(i.b)("p",null,"The simplest highlighter to create is one that does not have any state, which can simply be a POJO that conforms to the ",Object(i.b)("inlineCode",{parentName:"p"},"Highlighter")," interface."),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-js"}),"const customHighlighter = {\n  mark(schema) {\n    // return an array of highlighted References\n    return [];\n  }\n}\n")),Object(i.b)("p",null,"If there are options to the highlighter consider using a function factory:"),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-js"}),"export const customHighlighter = (options) => {\n  // make use of `options` in scope\n  return {\n    mark(schema) {\n      // return an array of highlighted References\n      return [];\n    }\n  }\n}\n")),Object(i.b)("h2",{id:"stateful-highlighters"},"Stateful Highlighters"),Object(i.b)("p",null,"If a highlighter needs to hold on to state it's useful to create a class that implements the ",Object(i.b)("inlineCode",{parentName:"p"},"Highlighter")," interface, like many of the highlighters provided out-of-the-box, with additional state can be kept on class properties."),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-js"}),"import { Highlighter } from 'graphql-mocks/highlight/types';\n\nclass CustomHighlighter implements Highlighter {\n  constructor(/* relevant options*/) {\n  }\n\n  // required `mark` method\n  mark(schema) {\n    // return an array of highlighted References\n    return [];\n  }\n}\n")),Object(i.b)("p",null,"Generally, by design highlighters if there are options to a Highlighter for a constructor it's easier to provide a factory function to pass along and construct the instance. For example, continuing with the ",Object(i.b)("inlineCode",{parentName:"p"},"CustomHighlighter")," class above:"),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-js"}),"export const customHighlighter = (options) => new CustomHighlighter(options);\n")),Object(i.b)("p",null,"While minimal it provides a more ergonomic API without have to ",Object(i.b)("inlineCode",{parentName:"p"},"new")," each Highlighter for use."),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-js"}),"hi(graphqlSchema).include(\n  customHighlighter({ /* options */ })\n);\n")),Object(i.b)("h2",{id:"highlight-all"},"Highlight All"),Object(i.b)("p",null,'If a highlighter has the notion of "highlight all", by convention, it\'s useful to consider these these two cases:'),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Use the ",Object(i.b)("inlineCode",{parentName:"li"},"HIGHLIGHT_ALL")," constant as an option"),Object(i.b)("li",{parentName:"ul"},"If possible, calling the highlighter without arguments, provides the highlight all case")))}c.isMDXComponent=!0},91:function(e,t,r){"use strict";r.d(t,"a",(function(){return g})),r.d(t,"b",(function(){return b}));var n=r(0),i=r.n(n);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function h(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?h(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):h(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var c=i.a.createContext({}),s=function(e){var t=i.a.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},g=function(e){var t=s(e.components);return i.a.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return i.a.createElement(i.a.Fragment,{},t)}},u=i.a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,a=e.originalType,h=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),g=s(r),u=n,b=g["".concat(h,".").concat(u)]||g[u]||p[u]||a;return r?i.a.createElement(b,l(l({ref:t},c),{},{components:r})):i.a.createElement(b,l({ref:t},c))}));function b(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var a=r.length,h=new Array(a);h[0]=u;var l={};for(var o in t)hasOwnProperty.call(t,o)&&(l[o]=t[o]);l.originalType=e,l.mdxType="string"==typeof e?e:n,h[1]=l;for(var c=2;c<a;c++)h[c]=r[c];return i.a.createElement.apply(null,h)}return i.a.createElement.apply(null,r)}u.displayName="MDXCreateElement"}}]);