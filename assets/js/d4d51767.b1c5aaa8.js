"use strict";(self.webpackChunk_graphql_mocks_docs=self.webpackChunk_graphql_mocks_docs||[]).push([[9291],{49751:function(e,n,r){r.r(n),r.d(n,{assets:function(){return i},contentTitle:function(){return c},default:function(){return d},frontMatter:function(){return p},metadata:function(){return l},toc:function(){return u}});var t=r(28427),a=r(84397),o=(r(2784),r(30876)),s=["components"],p={id:"cypress",title:"Cypress"},c=void 0,l={unversionedId:"network/cypress",id:"network/cypress",title:"Cypress",description:"Cypress is a free and open-source JavaScript testing framework for end-to-end, integration, and",source:"@site/docs/network/cypress.md",sourceDirName:"network",slug:"/network/cypress",permalink:"/docs/network/cypress",draft:!1,tags:[],version:"current",frontMatter:{id:"cypress",title:"Cypress"},sidebar:"docs",previous:{title:"Express",permalink:"/docs/network/express"},next:{title:"Nock",permalink:"/docs/network/nock"}},i={},u=[{value:"Installation",id:"installation",level:2},{value:"Usage",id:"usage",level:2},{value:"Resolver Context",id:"resolver-context",level:2}],m={toc:u};function d(e){var n=e.components,r=(0,a.Z)(e,s);return(0,o.kt)("wrapper",(0,t.Z)({},m,r,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://cypress.io"},"Cypress")," is a free and open-source JavaScript testing framework for end-to-end, integration, and\ncomponent testing in the browser. It also provides an easy way for mocking and stubbing network requests and responses."),(0,o.kt)("p",null,"You can easily integrate ",(0,o.kt)("inlineCode",{parentName:"p"},"graphql-mocks")," with cypress using ",(0,o.kt)("inlineCode",{parentName:"p"},"@graphql-mocks/network-cypress"),"."),(0,o.kt)("h2",{id:"installation"},"Installation"),(0,o.kt)("p",null,"Install the ",(0,o.kt)("inlineCode",{parentName:"p"},"cypress")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"@graphql-mocks/network-cypress")," npm packages."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"# npm\nnpm install --save-dev cypress @graphql-mocks/network-cypress\n\n# yarn\nyarn add --dev cypress @graphql-mocks/network-cypress\n\n# pnpm\npnpm add --save-dev cypress @graphql-mocks/network-cypress\n")),(0,o.kt)("h2",{id:"usage"},"Usage"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"import { GraphQLHandler } from 'graphql-mocks';\nimport { cypressHandler } from '@graphql-mocks/network-cypress';\nimport graphqlSchema from './graphql-schema';\n\nconst graphqlHandler = new GraphQLHandler({\n  dependencies: {\n    graphqlSchema,\n  },\n});\n\ncy.intercept('POST', '/graphql', cypressHandler(graphqlHandler));\n")),(0,o.kt)("p",null,"You can also create a custom command for mocking GraphQL requests APIs:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"// in cypress/support/commands.ts\n\n// If you're useing typescript\ndeclare global {\n  namespace Cypress {\n    interface Chainable {\n      /**\n       * Custom command to mock GraphQL API.\n       */\n      mockGraphQLAPI(): Chainable<null>;\n    }\n  }\n}\n\nCypress.Commands.add('mockGraphQLAPI', () => {\n  // make sure to return the cy.intercept() command so that you can chain\n  // other commands if needed\n  return cy.intercept('POST', '/graphql', cypressHandler(graphqlHandler));\n});\n")),(0,o.kt)("h2",{id:"resolver-context"},"Resolver Context"),(0,o.kt)("p",null,"When using the ",(0,o.kt)("inlineCode",{parentName:"p"},"@graphql-mocks/network-cypress")," network handler each resolver context has a ",(0,o.kt)("inlineCode",{parentName:"p"},"cypress")," property which\ncontains the ",(0,o.kt)("inlineCode",{parentName:"p"},"request")," from the cypress route handler."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"function resolver(parent, args, context, info) {\n  const { cypress } = context;\n  // request, from the cypress route handler\n  const { request } = cypress;\n}\n")))}d.isMDXComponent=!0},30876:function(e,n,r){r.d(n,{Zo:function(){return i},kt:function(){return d}});var t=r(2784);function a(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function o(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function s(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?o(Object(r),!0).forEach((function(n){a(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function p(e,n){if(null==e)return{};var r,t,a=function(e,n){if(null==e)return{};var r,t,a={},o=Object.keys(e);for(t=0;t<o.length;t++)r=o[t],n.indexOf(r)>=0||(a[r]=e[r]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)r=o[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var c=t.createContext({}),l=function(e){var n=t.useContext(c),r=n;return e&&(r="function"==typeof e?e(n):s(s({},n),e)),r},i=function(e){var n=l(e.components);return t.createElement(c.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},m=t.forwardRef((function(e,n){var r=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,i=p(e,["components","mdxType","originalType","parentName"]),m=l(r),d=a,y=m["".concat(c,".").concat(d)]||m[d]||u[d]||o;return r?t.createElement(y,s(s({ref:n},i),{},{components:r})):t.createElement(y,s({ref:n},i))}));function d(e,n){var r=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=r.length,s=new Array(o);s[0]=m;var p={};for(var c in n)hasOwnProperty.call(n,c)&&(p[c]=n[c]);p.originalType=e,p.mdxType="string"==typeof e?e:a,s[1]=p;for(var l=2;l<o;l++)s[l]=r[l];return t.createElement.apply(null,s)}return t.createElement.apply(null,r)}m.displayName="MDXCreateElement"}}]);