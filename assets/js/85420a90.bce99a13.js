"use strict";(self.webpackChunk_graphql_mocks_docs=self.webpackChunk_graphql_mocks_docs||[]).push([[633],{90965:function(e,a,r){r.r(a),r.d(a,{assets:function(){return m},contentTitle:function(){return s},default:function(){return c},frontMatter:function(){return o},metadata:function(){return p},toc:function(){return u}});var t=r(28427),n=r(84397),l=(r(2784),r(30876)),i=["components"],o={id:"available-middlewares",title:"Available Middlewares"},s=void 0,p={unversionedId:"resolver-map/available-middlewares",id:"resolver-map/available-middlewares",title:"Available Middlewares",description:"There are many useful Resolver Map Middlewares available to quickly mock and augment GraphQL APIs. Learn how to create your own custom middlewares. Have a useful Resolver Map Middleware to share with the community? Open a PR to add it here.",source:"@site/docs/resolver-map/available-middlewares.md",sourceDirName:"resolver-map",slug:"/resolver-map/available-middlewares",permalink:"/docs/resolver-map/available-middlewares",draft:!1,tags:[],version:"current",frontMatter:{id:"available-middlewares",title:"Available Middlewares"},sidebar:"docs",previous:{title:"Managing Resolvers with Middlewares",permalink:"/docs/resolver-map/managing-resolvers"},next:{title:"Creating Custom Middlewares",permalink:"/docs/resolver-map/creating-middlewares"}},m={},u=[{value:"<code>embed</code>",id:"embed",level:2},{value:"<code>layer</code>",id:"layer",level:2},{value:"Falso",id:"falso",level:2},{value:"Mirage JS",id:"mirage-js",level:2}],d={toc:u};function c(e){var a=e.components,r=(0,n.Z)(e,i);return(0,l.kt)("wrapper",(0,t.Z)({},d,r,{components:a,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"There are many useful Resolver Map Middlewares available to quickly mock and augment GraphQL APIs. Learn how to ",(0,l.kt)("a",{parentName:"p",href:"/docs/resolver-map/creating-middlewares"},"create your own custom middlewares"),". Have a useful Resolver Map Middleware to share with the community? Open a PR to add it here."),(0,l.kt)("h2",{id:"embed"},(0,l.kt)("inlineCode",{parentName:"h2"},"embed")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Package: ",(0,l.kt)("inlineCode",{parentName:"li"},"graphql-mocks")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"/docs/resolver-map/managing-resolvers#using-embed"},"Documentation"))),(0,l.kt)("p",null,"Manage and manipulate Resolver Maps by using ",(0,l.kt)("inlineCode",{parentName:"p"},"embed")," to add Resolvers and/or Resolver Wrappers."),(0,l.kt)("h2",{id:"layer"},(0,l.kt)("inlineCode",{parentName:"h2"},"layer")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Package: ",(0,l.kt)("inlineCode",{parentName:"li"},"graphql-mocks")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"/docs/resolver-map/managing-resolvers#using-layer"},"Documentation"))),(0,l.kt)("p",null,"Lazily add layering of Resolvers via Resolver Map partials with ",(0,l.kt)("inlineCode",{parentName:"p"},"layer"),", optionally applying Resolver Wrappers. See the ",(0,l.kt)("a",{parentName:"p",href:"/docs/resolver-map/managing-resolvers#using-layer"},"guide")," for examples."),(0,l.kt)("h2",{id:"falso"},"Falso"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Package: ",(0,l.kt)("inlineCode",{parentName:"li"},"@graphql-mocks/falso")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"/docs/guides/fake-data"},"Documentation"))),(0,l.kt)("p",null,"Using ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/ngneat/falso"},"Falso")," with the Resolver Map Middleware from ",(0,l.kt)("inlineCode",{parentName:"p"},"@graphql-mocks/falso")," provides an extremely quick way to automatically mock any GraphQL schema."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Automatically mock an entire schema"),(0,l.kt)("li",{parentName:"ul"},"Fallbacks to Falso data based on field-name heuristics"),(0,l.kt)("li",{parentName:"ul"},"Configurable Falso functions per GraphQL field"),(0,l.kt)("li",{parentName:"ul"},"Provide dynamic ranges for list types")),(0,l.kt)("h2",{id:"mirage-js"},"Mirage JS"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Package: ",(0,l.kt)("inlineCode",{parentName:"li"},"@graphql-mocks/mirage")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"/docs/guides/mirage-js"},"Documentation"))),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Note:")," If starting new it's much easier to use GraphQL Paper which works natively with GraphQL, including connections and relationships. GraphQL Paper solves the same use cases as Mirage but in a GraphQL-first way using the GraphQL Schema with more extensibility and features like events, custom validations and hooks. If starting to migrate from an existing a Mirage setup then using the Mirage JS middleware is likely a good start."),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://miragejs.com/"},"Mirage JS")," is a tool for aimed at mocking out REST APIs and includes an in-memory store. ",(0,l.kt)("inlineCode",{parentName:"p"},"@graphql-mocks/mirage")," provides a middleware that leverages uses Mirage to provide stateful GraphQL queries. See the ",(0,l.kt)("a",{parentName:"p",href:"/docs/guides/mirage-js"},"documentation")," for details and plenty of examples."))}c.isMDXComponent=!0},30876:function(e,a,r){r.d(a,{Zo:function(){return m},kt:function(){return c}});var t=r(2784);function n(e,a,r){return a in e?Object.defineProperty(e,a,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[a]=r,e}function l(e,a){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);a&&(t=t.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),r.push.apply(r,t)}return r}function i(e){for(var a=1;a<arguments.length;a++){var r=null!=arguments[a]?arguments[a]:{};a%2?l(Object(r),!0).forEach((function(a){n(e,a,r[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(r,a))}))}return e}function o(e,a){if(null==e)return{};var r,t,n=function(e,a){if(null==e)return{};var r,t,n={},l=Object.keys(e);for(t=0;t<l.length;t++)r=l[t],a.indexOf(r)>=0||(n[r]=e[r]);return n}(e,a);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(t=0;t<l.length;t++)r=l[t],a.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var s=t.createContext({}),p=function(e){var a=t.useContext(s),r=a;return e&&(r="function"==typeof e?e(a):i(i({},a),e)),r},m=function(e){var a=p(e.components);return t.createElement(s.Provider,{value:a},e.children)},u={inlineCode:"code",wrapper:function(e){var a=e.children;return t.createElement(t.Fragment,{},a)}},d=t.forwardRef((function(e,a){var r=e.components,n=e.mdxType,l=e.originalType,s=e.parentName,m=o(e,["components","mdxType","originalType","parentName"]),d=p(r),c=n,f=d["".concat(s,".").concat(c)]||d[c]||u[c]||l;return r?t.createElement(f,i(i({ref:a},m),{},{components:r})):t.createElement(f,i({ref:a},m))}));function c(e,a){var r=arguments,n=a&&a.mdxType;if("string"==typeof e||n){var l=r.length,i=new Array(l);i[0]=d;var o={};for(var s in a)hasOwnProperty.call(a,s)&&(o[s]=a[s]);o.originalType=e,o.mdxType="string"==typeof e?e:n,i[1]=o;for(var p=2;p<l;p++)i[p]=r[p];return t.createElement.apply(null,i)}return t.createElement.apply(null,r)}d.displayName="MDXCreateElement"}}]);