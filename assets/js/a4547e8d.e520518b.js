"use strict";(self.webpackChunk_graphql_mocks_docs=self.webpackChunk_graphql_mocks_docs||[]).push([[4850],{87010:function(e,n,r){r.r(n),r.d(n,{assets:function(){return c},contentTitle:function(){return l},default:function(){return m},frontMatter:function(){return p},metadata:function(){return i},toc:function(){return u}});var t=r(28427),a=r(84397),s=(r(2784),r(30876)),o=["components"],p={id:"express",title:"Express"},l=void 0,i={unversionedId:"network/express",id:"network/express",title:"Express",description:"Express is a popular node.js web server library. Mocks loaded into a  GraphQLHandler can be integrated with express, via @graphql-mocks/network-express, to provide a live running server. This is useful when needing a live endpoint to test against or hosting mocks to share with others.",source:"@site/docs/network/express.md",sourceDirName:"network",slug:"/network/express",permalink:"/docs/network/express",draft:!1,tags:[],version:"current",frontMatter:{id:"express",title:"Express"},sidebar:"docs",previous:{title:"Pretender",permalink:"/docs/network/pretender"},next:{title:"Cypress",permalink:"/docs/network/cypress"}},c={},u=[{value:"Installation",id:"installation",level:2},{value:"Usage",id:"usage",level:2},{value:"Resolver Context",id:"resolver-context",level:3},{value:"API Documentation",id:"api-documentation",level:2}],d={toc:u};function m(e){var n=e.components,r=(0,a.Z)(e,o);return(0,s.kt)("wrapper",(0,t.Z)({},d,r,{components:n,mdxType:"MDXLayout"}),(0,s.kt)("p",null,(0,s.kt)("a",{parentName:"p",href:"https://expressjs.com/"},"Express")," is a popular node.js web server library. Mocks loaded into a  ",(0,s.kt)("inlineCode",{parentName:"p"},"GraphQLHandler")," can be integrated with express, via ",(0,s.kt)("inlineCode",{parentName:"p"},"@graphql-mocks/network-express"),", to provide a live running server. This is useful when needing a live endpoint to test against or hosting mocks to share with others."),(0,s.kt)("h2",{id:"installation"},"Installation"),(0,s.kt)("p",null,"Install the ",(0,s.kt)("inlineCode",{parentName:"p"},"express")," and  ",(0,s.kt)("inlineCode",{parentName:"p"},"@graphql-mocks/network-express")," npm packages."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"# npm\nnpm install --save-dev express @graphql-mocks/network-express\n\n# yarn\nyarn add --dev express @graphql-mocks/network-express\n")),(0,s.kt)("h2",{id:"usage"},"Usage"),(0,s.kt)("p",null,"Use ",(0,s.kt)("inlineCode",{parentName:"p"},"expressMiddleware")," from ",(0,s.kt)("inlineCode",{parentName:"p"},"@graphql-mocks/network-express")," as an ",(0,s.kt)("a",{parentName:"p",href:"https://expressjs.com/en/guide/using-middleware.html#middleware.application"},"application-level middleware")," or ",(0,s.kt)("a",{parentName:"p",href:"https://expressjs.com/en/guide/using-middleware.html#middleware.router"},"router middleware"),"."),(0,s.kt)("p",null,"This example sets up a file ",(0,s.kt)("inlineCode",{parentName:"p"},"server.js")," using an express server with the ",(0,s.kt)("inlineCode",{parentName:"p"},"expressMiddleware")," as an application-middleware, listening on port 8080."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},"// server.js\n\nconst { GraphQLHandler } = require('graphql-mocks');\nconst { expressMiddleware } = require('@graphql-mocks/network-express');\nconst express = require('express');\n\nconst graphqlHandler = new GraphQLHandler({\n  dependencies: { graphqlSchema }\n};\n\nconst app = express();\napp.post('/graphql', expressMiddleware(graphqlHandler));\n\nconst port = 8080;\napp.listen(port);\n")),(0,s.kt)("p",null,"Start the express app."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-shell"},"node server\n")),(0,s.kt)("p",null,"The server will now be responding to graphql ",(0,s.kt)("inlineCode",{parentName:"p"},"POST")," requests at ",(0,s.kt)("inlineCode",{parentName:"p"},"http://localhost:8080/graphql"),"."),(0,s.kt)("p",null,"For example, making a request using fetch (in the browser or via ",(0,s.kt)("inlineCode",{parentName:"p"},"node-fetch"),")"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},"fetch('http://localhost:8080/graphql, {\n  method: 'POST',\n  body: JSON.stringify({\n    // required\n    query: `\n      query {\n        # graphql query\n      }\n    `,\n\n    // optional\n    variables: {},\n\n    // optional\n    operationName: 'OperationName'\n  })\n}).then(async (response) => {\n  // get the final json payload\n  const result = await response.json();\n  return result;\n});\n")),(0,s.kt)("p",null,"See the ",(0,s.kt)("a",{parentName:"p",href:"https://graphql.org/learn/serving-over-http/#post-request"},"GraphQL docs")," for details on these body parameters, and making http requests."),(0,s.kt)("h3",{id:"resolver-context"},"Resolver Context"),(0,s.kt)("p",null,"The express request and response objects are available on the resolver ",(0,s.kt)("inlineCode",{parentName:"p"},"context")," argument, under the ",(0,s.kt)("inlineCode",{parentName:"p"},"express")," property."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},"function resolver(parent, args, context, info) {\n  const { req, res } = context.express;\n}\n")),(0,s.kt)("h2",{id:"api-documentation"},"API Documentation"),(0,s.kt)("p",null," See the ",(0,s.kt)("a",{parentName:"p",href:"/api/network-express/"},"API Documentation")," for types and more details."))}m.isMDXComponent=!0},30876:function(e,n,r){r.d(n,{Zo:function(){return c},kt:function(){return m}});var t=r(2784);function a(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function s(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function o(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?s(Object(r),!0).forEach((function(n){a(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):s(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function p(e,n){if(null==e)return{};var r,t,a=function(e,n){if(null==e)return{};var r,t,a={},s=Object.keys(e);for(t=0;t<s.length;t++)r=s[t],n.indexOf(r)>=0||(a[r]=e[r]);return a}(e,n);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(t=0;t<s.length;t++)r=s[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var l=t.createContext({}),i=function(e){var n=t.useContext(l),r=n;return e&&(r="function"==typeof e?e(n):o(o({},n),e)),r},c=function(e){var n=i(e.components);return t.createElement(l.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},d=t.forwardRef((function(e,n){var r=e.components,a=e.mdxType,s=e.originalType,l=e.parentName,c=p(e,["components","mdxType","originalType","parentName"]),d=i(r),m=a,h=d["".concat(l,".").concat(m)]||d[m]||u[m]||s;return r?t.createElement(h,o(o({ref:n},c),{},{components:r})):t.createElement(h,o({ref:n},c))}));function m(e,n){var r=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var s=r.length,o=new Array(s);o[0]=d;var p={};for(var l in n)hasOwnProperty.call(n,l)&&(p[l]=n[l]);p.originalType=e,p.mdxType="string"==typeof e?e:a,o[1]=p;for(var i=2;i<s;i++)o[i]=r[i];return t.createElement.apply(null,o)}return t.createElement.apply(null,r)}d.displayName="MDXCreateElement"}}]);